<snippet>
	<content><![CDATA[

const int mod = 1e9 + 7; // 998244353;
int powm(int a, int b) {
	int res = 1; while (b) {
		if (b & 1) res = (res * a) % mod; a = (a * a) % mod; b >>= 1;
	} return res;
}
int invm(int a) { return powm(a, mod - 2);}
void add(int &a, int b) { a = (a + b) % mod;}
void sub(int &a, int b) { a = (a - b + mod) % mod;}
void mul(int &a, int b) { a = (a * b) % mod;}
void divide(int &a, int b) { a = a * invm(b) % mod;}
int mult(int a, int b) { return (a * b) % mod;}

const int nax = 3e5 + 10;
int fact[nax], ifact[nax];
void F() {
	fact[0] = 1;
	for (int i = 1; i < nax; i++) fact[i] = (fact[i - 1] * i) % mod;
	ifact[nax - 1] = powm(fact[nax - 1], mod - 2);
	for (int i = nax - 2; i >= 0; i--) ifact[i] = (ifact[i + 1] * (i + 1)) % mod;
}

int C(int n, int r) {
	if (n < r || r < 0 || n < 0) return 0;
	return mult(fact[n], mult(ifact[r], ifact[n - r]));
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>factorial</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
